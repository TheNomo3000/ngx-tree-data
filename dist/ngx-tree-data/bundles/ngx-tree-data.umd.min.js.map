{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-tree-data/lib/models/models.ts","ng://ngx-tree-data/lib/services/ngx-tree-data.service.ts","ng://ngx-tree-data/lib/ngx-tree-data.component.ts","ng://ngx-tree-data/lib/ngx-tree-data.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","__spread","concat","ItemNode","this","id","NgxTreeDataService","platformLocation","dataChange","BehaviorSubject","dataSource","prototype","initialize","data","externalData","newData","generateData","generateDataWithCode","treeData","buildFileTree","parent","forEach","item","text","code","selected","childrens","children","children_1","el","itemChildren","obj","level","_this","filter","startsWith","match","map","node","so","filterText","filteredTreeData","toLocaleLowerCase","indexOf","assign","ftd","str","lastIndexOf","index","substring","findIndex","t","find","updateData","items","recursiveUpdate","Injectable","providedIn","PlatformLocation","NgxTreeDataComponent","database","EventEmitter","autoSave","selectFirst","selectThis","checkbox","search","selectAll","multiple","flatNodeMap","Map","nestedNodeMap","selectedParent","newItemName","checklistSelection","SelectionModel","getLevel","isExpandable","expandable","getChildren","hasChild","_","_nodeData","transformer","flatNode","existingNode","get","select","set","treeFlattener","MatTreeFlattener","treeControl","FlatTreeControl","MatTreeFlatDataSource","ngOnInit","subscribe","emit","descendantsAllSelected","getDescendants","every","child","isSelected","descendantsPartiallySelected","some","todoItemSelectionToggle","toggle","descendants","_a","apply","_b","deselect","filterChanged","expandAll","collapseAll","changeStatusNode","selectAllOptions","mode","dataNodes","ngOnDestroy","tslib_1.__decorate","Output","Input","Component","selector","template","NgxTreeDataModule","NgModule","declarations","imports","BrowserModule","MatButtonModule","MatCheckboxModule","MatFormFieldModule","MatTreeModule","MatIconModule","MatInputModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class ItemNode {\r\n    children: ItemNode[];\r\n    id ?= -1;\r\n    item: string;\r\n    code: string;\r\n    selected: boolean;\r\n    data: any;\r\n}\r\n\r\nexport class ItemFlatNode {\r\n    id ?= -1;\r\n    item: string;\r\n    level: number;\r\n    expandable: boolean;\r\n    selected: boolean;\r\n    code: string;\r\n    data: any;\r\n}\r\n\r\nexport class TreeData {\r\n    text: string;\r\n    id ?= -1;\r\n    selected = false;\r\n    children: TreeData [] | null;\r\n    data ?: any = null;\r\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { PlatformLocation } from '@angular/common';\nimport { ItemNode, TreeData, ItemFlatNode } from '../models/models';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxTreeDataService {\n  dataChange = new BehaviorSubject<ItemNode []>(null);\n  treeData: any [];\n  externalData: TreeData [];\n  dataSource = [];\n  get data(): ItemNode [] { return  this.dataChange.value; }\n  loaderId: string;\n  constructor(private platformLocation: PlatformLocation) {}\n\n  initialize(data: TreeData []) {\n    this.externalData = data;\n    const newData = this.generateData(this.externalData);\n    this.dataChange.next(newData);\n  }\n\n  generateData(data: TreeData []): ItemNode [] {\n    this.dataSource = this.generateDataWithCode(data);\n    this.treeData = this.dataSource;\n    return this.buildFileTree(this.dataSource, '0');\n  }\n\n  private generateDataWithCode(data: TreeData []): any[] {\n    const newData = [];\n    let parent = 1;\n    data.forEach(item => {\n      newData.push(\n        {\n          text: item.text,\n          id: item.id,\n          code: `0.${parent}`,\n          selected: item.selected,\n          data: item.data\n        }\n      );\n      const childrens = item.children;\n      if (childrens.length > 0) {\n        let children = 1;\n        childrens.forEach(el => {\n          const itemChildren = {\n            text: el.text,\n            code: `0.${parent}.${children}`,\n            selected: el.selected,\n            id: el.id,\n            data: el.data\n          };\n          newData.push(itemChildren);\n          children++;\n        });\n      }\n      parent++;\n    });\n    return newData;\n  }\n\n  private buildFileTree(obj: any[], level: string): ItemNode [] {\n    return obj.filter(o =>\n      (o.code as string).startsWith(level + '.')\n      && (o.code.match(/\\./g) || []).length === (level.match(/\\./g) || []).length + 1\n    )\n      .map(o => {\n        const node = new ItemNode();\n        node.item = o.text;\n        node.selected = o.selected;\n        node.id = o.id;\n        node.code = o.code;\n        node.data = o.data;\n        const children = obj.filter(so => (so.code as string).startsWith(level + '.'));\n        if (children && children.length > 0) {\n            node.children = this.buildFileTree(children, o.code);\n          }\n        return node;\n      });\n  }\n\n  public filter(filterText: string) {\n    this.treeData = this.generateDataWithCode(this.externalData);\n    let filteredTreeData;\n    if (filterText) {\n      filteredTreeData = this.treeData.filter(d => d.text.toLocaleLowerCase().indexOf(filterText.toLocaleLowerCase()) > -1);\n      Object.assign([], filteredTreeData).forEach(ftd => {\n        let str = (ftd.code as string);\n        while (str.lastIndexOf('.') > -1) {\n          const index = str.lastIndexOf('.');\n          str = str.substring(0, index);\n          if (filteredTreeData.findIndex(t => t.code === str) === -1) {\n            const obj = this.treeData.find(d => d.code === str);\n            if (obj) {\n              filteredTreeData.push(obj);\n            }\n          }\n        }\n      });\n    } else {\n      filteredTreeData = this.treeData;\n    }\n    const data = this.buildFileTree(filteredTreeData, '0');\n    this.dataChange.next(data);\n  }\n\n  public updateData(items: ItemFlatNode [], externalData ?: TreeData [] | null): void {\n    this.externalData = this.recursiveUpdate(items, this.externalData);\n  }\n\n  recursiveUpdate(items: ItemFlatNode[], externalData: TreeData []): TreeData [] {\n    externalData.map(data => {\n      data.selected = false;\n      items.forEach(el => {\n        if (el.id === data.id) {\n          data.selected = true;\n        }\n      });\n      const children = data.children;\n      if (children && data.children.length > 0) {\n        this.recursiveUpdate(items, children);\n      }\n    });\n    return externalData;\n  }\n}\n","import { Component, Output, Input, EventEmitter, OnDestroy, OnInit } from '@angular/core';\nimport { ItemNode, ItemFlatNode } from './models/models';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgxTreeDataService } from './services/ngx-tree-data.service';\n\n@Component({\n  selector: 'ngx-tree-data',\n  templateUrl: `ngx-tree-data.component.html`,\n  styleUrls: [`ngx-tree-data.component.scss`]\n})\nexport class NgxTreeDataComponent implements OnDestroy, OnInit {\n  @Output() selected = new EventEmitter<ItemNode | ItemFlatNode []>();\n  @Input() autoSave = true;\n  @Input() selectFirst = false;\n  @Input() selectThis: number = null;\n  @Input() checkbox = false;\n  @Input() search = false;\n  @Input() selectAll = false;\n  @Input() multiple = true;\n  flatNodeMap = new Map<ItemFlatNode, ItemNode>();\n  nestedNodeMap = new Map<ItemNode, ItemFlatNode>();\n\n  selectedParent: ItemFlatNode | null = null;\n\n  newItemName = '';\n\n  treeControl: FlatTreeControl<ItemFlatNode>;\n\n  treeFlattener: MatTreeFlattener<ItemNode, ItemFlatNode>;\n\n  dataSource: MatTreeFlatDataSource<ItemNode, ItemFlatNode>;\n\n  checklistSelection = new SelectionModel<ItemFlatNode>(this.multiple);\n  loaderId: string;\n  constructor(private database: NgxTreeDataService) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\n      this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl<ItemFlatNode>(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n  }\n\n  ngOnInit() {\n    this.database.dataChange.subscribe( data => {\n      if (this.selectFirst) {\n        data.forEach( el => {\n          if (el.children) {\n            el.children.forEach( item => {\n              this.selected.emit(item);\n            });\n          }\n        });\n      } else if (this.selectThis) {\n        data.filter( (o: ItemNode) => (o.id as number) === (this.selectThis as number) )\n          .map( (item: ItemNode ) => {\n            this.selected.emit(item);\n          });\n      }\n      this.dataSource.data = data;\n    });\n  }\n\n  getLevel = (node: ItemFlatNode) => node.level;\n\n  isExpandable = (node: ItemFlatNode) => node.expandable;\n\n  getChildren = (node: ItemNode): ItemNode [] => node.children;\n\n  hasChild = (_: number, _nodeData: ItemFlatNode) => _nodeData.expandable;\n\n  transformer = (node: ItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    let flatNode;\n    flatNode = existingNode && existingNode.item === node.item ? existingNode : new ItemNode();\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.code = node.code;\n    flatNode.data = node.data;\n    flatNode.selected = node.selected;\n    flatNode.id = node.id;\n    if (flatNode.selected) {\n      this.checklistSelection.select(flatNode);\n    }\n    flatNode.expandable = node.children && node.children.length > 0;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  descendantsAllSelected(node: ItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  descendantsPartiallySelected(node: ItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return result && !this.descendantsAllSelected(node);\n  }\n\n  todoItemSelectionToggle(node: ItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    this.checklistSelection.isSelected(node)\n      ? this.checklistSelection.select(...descendants)\n      : this.checklistSelection.deselect(...descendants);\n  }\n\n  filterChanged(filterText: string) {\n    this.database.filter(filterText);\n    if (filterText) {\n      this.treeControl.expandAll();\n    } else {\n      this.treeControl.collapseAll();\n    }\n  }\n\n  changeStatusNode(node: ItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    this.database.updateData(this.checklistSelection.selected);\n    this.selected.emit(this.checklistSelection.selected);\n  }\n\n  selectAllOptions(mode: boolean): void {\n    if (mode) {\n      this.checklistSelection.select(...this.treeControl.dataNodes);\n    } else {\n      this.checklistSelection.deselect(...this.treeControl.dataNodes);\n    }\n    this.selected.emit(this.checklistSelection.selected);\n    this.database.updateData(this.checklistSelection.selected);\n  }\n\n  ngOnDestroy(): void {\n    this.dataSource.data = [];\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgxTreeDataComponent } from './ngx-tree-data.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  declarations: [\n    NgxTreeDataComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatTreeModule,\n    MatIconModule,\n    MatInputModule\n  ],\n  exports: [\n    NgxTreeDataComponent\n  ],\n})\nexport class NgxTreeDataModule { }\n"]}